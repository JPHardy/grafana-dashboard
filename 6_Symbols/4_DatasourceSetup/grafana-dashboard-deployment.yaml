admin:
  ## @param admin.user Grafana admin username
  ##
  user: "admin"
  ## @param admin.password Admin password. If a password is not provided a random password will be generated
  ##
  ## Test this to make sure the values yaml used your values not the default values...if the structure fails it defaults back to default values
  password: "your-password"

config:
  useGrafanaIniFile: false
  grafanaIniConfigMap: myconfig
  # paths:
  #   provisioning: /opt/bitnami/grafana/conf/provisioning

dashboardsProvider:
  enabled: true

dashboardsConfigMaps:
  - configMapName: grafana-dashboard-config1
    fileName: grafana_dashboard_config1.json
  - configMapName: grafana-dashboard-config2
    fileName: grafana_dashboard_config2.json

datasources:
  secretName: "grafana-datasource-secret"
        
grafana:
  ## Environment variables
  ##
  envVars:
    - name: GF_LOG_LEVEL
      value: debug

  ## Number of Grafana replicas
  ##
  replicaCount: 1

  ## Persistence configuration
  ##
  persistence:
    enabled: true
    size: 100Mi
    ## If defined, storageClassName: <storageClass>
    storageClassName: "standard"
    accessModes:
      - ReadWriteOnce

  ## Service configuration
  ##
  service:
    type: NodePort
    port: 3000
    nodePort: 30000

  ## Additional volumes
  ##
  extraVolumes:
    - name: grafana-storage
      emptyDir: {}
    - name: grafana-datasource-secret
      secret:
        secretName: grafana-datasource-secret

  ## Volume mounts
  ##
  volumeMounts:
    - name: grafana-storage
      mountPath: /opt/bitnami/grafana
    - name: datasources
      mountPath: /opt/bitnami/grafana/conf/provisioning/datasources
      readOnly: true

  ## Resources configuration
  ##
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi

  # ## Configure additional datasources
  # ##
  # datasources:
  #   secretName: grafana-datasource-secret

## Service parameters
##
service:
  ## @param service.type Kubernetes Service type
  ##
  type: ClusterIP
  ## @param service.clusterIP Grafana service Cluster IP
  ## e.g.:
  ## clusterIP: None
  ##
  # clusterIP: ""
  ## @param service.ports.grafana Grafana service port
  ##
  ports:
    grafana: 3000